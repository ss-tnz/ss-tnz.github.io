<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计网简答题</title>
    <link href="/2021/12/16/%E8%AE%A1%E7%BD%91%E7%AE%80%E7%AD%94%E9%A2%98/"/>
    <url>/2021/12/16/%E8%AE%A1%E7%BD%91%E7%AE%80%E7%AD%94%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="计网简答题"><a href="#计网简答题" class="headerlink" title="计网简答题"></a>计网简答题</h1><h2 id="第一章：计算机网络概述"><a href="#第一章：计算机网络概述" class="headerlink" title="第一章：计算机网络概述"></a>第一章：计算机网络概述</h2><ol><li>计算机网络的分类（按作用范围分，按使用者分，按采用的交换技术分）</li><li>互联网的组成：边缘和核心</li><li>边缘：客户服务器方式，p2p</li><li>核心：电路交换，分组交换，报文交换</li><li>计算机网络主要性能指标（7种）</li><li>计算机网络体系结构的定义</li><li>osi,tcp/ip体系</li><li>转发器</li></ol><h2 id="第二章：物理层"><a href="#第二章：物理层" class="headerlink" title="第二章：物理层"></a>第二章：物理层</h2><ol><li>物理层解决什么问题，四个特性</li><li>数据通信（单工，半双工，全双工）</li><li>数据通信模型（源系统，传输系统，目的系统）</li><li>传输媒介（引导型和非引导型）</li><li>奈氏准则和香农公式</li><li>同步通信和异步通信/未同步和帧同步、</li><li>名词解释：数据，信号，模拟信号，基带信号，带通信号，数字数据，数字信号，码元，并行串行</li><li>信道复用：FDM,TDM,STDM,WDM,DWDM,CDMA.</li><li>ADSL,HFC,FTTX接入技术</li><li></li></ol><h2 id="第三章：数据链路层"><a href="#第三章：数据链路层" class="headerlink" title="第三章：数据链路层"></a>第三章：数据链路层</h2><ol><li>数据链路层的功能（封装成帧，透明传输，差错检测）</li><li>ppp，crc，检错吗纠错码</li><li>网络拓扑（三种）</li><li>，以太网，IEEE802.3以太网（多点接入，载波监听，碰撞监测）</li><li>csma/cd</li><li>以太网交换机，VLAN，网桥</li></ol><h2 id="第四章：网络层"><a href="#第四章：网络层" class="headerlink" title="第四章：网络层"></a>第四章：网络层</h2><ol><li>提供的两种服务：虚电路和数据报</li><li>转发器，网桥，路由器区别</li><li>网际协议ip，ARP,RARP,ICMP，IGMP</li><li>ip地址与物理地址的区别</li><li>mtu，CIDR</li><li>IGP:RIP,OSPF EGP:BGP4</li><li>VPN,NAT,NAPT</li><li>虚拟分组（IP数据报）</li><li>网络互连的意义</li><li>ttl</li><li>自治系统</li></ol><h2 id="第五章：运输层"><a href="#第五章：运输层" class="headerlink" title="第五章：运输层"></a>第五章：运输层</h2><ol><li>TCP UDP</li><li>面向连接和非面向连接</li><li>接口和套接字</li><li>糊涂综合征</li><li>慢开始，快充穿，快恢复</li><li>pdu</li></ol><h2 id="第六章：应用层"><a href="#第六章：应用层" class="headerlink" title="第六章：应用层"></a>第六章：应用层</h2><ol><li>域名系统DNS，域名服务器，域名转化（迭代和递归）</li><li>ftp</li><li>telnet</li><li>www，URL,HTTP,HTML,CGI,浏览器，超文本，超媒体，超链</li><li>SMTP,POP3</li><li>DHCP</li><li>搜索引擎</li></ol><h2 id="第七章：网络安全"><a href="#第七章：网络安全" class="headerlink" title="第七章：网络安全"></a>第七章：网络安全</h2><ol><li>拒绝服务dos，分布式拒绝服务ddos</li><li>报文保密性和完整性</li><li>常规密钥体制和公钥体制</li><li>rsa</li><li>计算机网络的威胁（一个被动，三个主动）</li><li>拒绝服务，访问控制，流量分析，恶意程序</li><li>密码编码学 ，密码分析学，密码学</li><li>数字签名</li><li>报文鉴别和实体鉴别</li><li>防火墙</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>简单入门tensorflow DAY1(记下代码方便有空的时候看下)</title>
    <link href="/2020/12/22/%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8tensorflow%20DAY1(%E8%AE%B0%E4%B8%8B%E4%BB%A3%E7%A0%81%E6%96%B9%E4%BE%BF%E6%9C%89%E7%A9%BA%E7%9A%84%E6%97%B6%E5%80%99%E7%9C%8B%E4%B8%8B)/"/>
    <url>/2020/12/22/%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8tensorflow%20DAY1(%E8%AE%B0%E4%B8%8B%E4%BB%A3%E7%A0%81%E6%96%B9%E4%BE%BF%E6%9C%89%E7%A9%BA%E7%9A%84%E6%97%B6%E5%80%99%E7%9C%8B%E4%B8%8B)/</url>
    
    <content type="html"><![CDATA[<h2 id="简单入门tensorflow-DAY1-记下代码方便有空的时候看下"><a href="#简单入门tensorflow-DAY1-记下代码方便有空的时候看下" class="headerlink" title="简单入门tensorflow DAY1(记下代码方便有空的时候看下)"></a>简单入门tensorflow DAY1(记下代码方便有空的时候看下)</h2><p>神经网络实现鸢尾花代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>x_data=datasets.load_iris().data<br>y_data=datasets.load_iris().target<br><br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(x_data)<br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(y_data)<br>tf.random.set_seed(<span class="hljs-number">116</span>)<br><br>x_train=x_data[:<span class="hljs-number">-30</span>]<br>y_train=y_data[:<span class="hljs-number">-30</span>]<br>x_test=x_data[<span class="hljs-number">-30</span>:]<br>y_test=y_data[<span class="hljs-number">-30</span>:]<br><br>x_train=tf.cast(x_train,tf.float32)<br>x_test=tf.cast(x_test,tf.float32)<br><br>train_db=tf.data.Dataset.from_tensor_slices((x_train,y_train)).batch(<span class="hljs-number">32</span>)<br>test_db=tf.data.Dataset.from_tensor_slices((x_test,y_test)).batch(<span class="hljs-number">32</span>)<br><br>w1=tf.Variable(tf.random.truncated_normal([<span class="hljs-number">4</span>,<span class="hljs-number">3</span>],stddev=<span class="hljs-number">0.1</span>,seed=<span class="hljs-number">1</span>))<br>b1=tf.Variable(tf.random.truncated_normal([<span class="hljs-number">3</span>],stddev=<span class="hljs-number">0.1</span>,seed=<span class="hljs-number">1</span>))<br><br>lr=<span class="hljs-number">0.1</span><br>train_loss_results=[]<br>test_acc=[]<br>epoch=<span class="hljs-number">500</span><br>loss_all=<span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> range(epoch):<br>    <span class="hljs-keyword">for</span> step,(x_train,y_train) <span class="hljs-keyword">in</span> enumerate(train_db):<br>        <span class="hljs-keyword">with</span> tf.GradientTape() <span class="hljs-keyword">as</span> tape:<br>            y = tf.matmul(x_train, w1) + b1  <span class="hljs-comment"># 神经网络乘加运算</span><br>            y = tf.nn.softmax(y)  <span class="hljs-comment"># 使输出y符合概率分布（此操作后与独热码同量级，可相减求loss）</span><br>            y_= tf.one_hot(y_train, depth=<span class="hljs-number">3</span>)  <span class="hljs-comment"># 将标签值转换为独热码格式，方便计算loss和accuracy</span><br>            loss = tf.reduce_mean(tf.square(y_ - y))   <span class="hljs-comment"># 采用均方误差损失函数mse = mean(sum(y-out)^2)</span><br>            loss_all += loss.numpy()  <br>        grads=tape.gradient(loss,[w1,b1])<br>        w1.assign_sub(lr*grads[<span class="hljs-number">0</span>])<br>        b1.assign_sub(lr*grads[<span class="hljs-number">1</span>])<br>    print(<span class="hljs-string">"Epoch &#123;&#125;,loss:&#123;&#125;"</span>.format(epoch,loss_all/<span class="hljs-number">4</span>))<br>    train_loss_results.append(loss_all/<span class="hljs-number">4</span>)<br>    loss_all=<span class="hljs-number">0</span><br>    <br>    total_correct,total_number=<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> x_test,y_test <span class="hljs-keyword">in</span> test_db:<br>        y=tf.matmul(x_test,w1)+b1<br>        y=tf.nn.softmax(y)<br>        pred=tf.argmax(y,axis=<span class="hljs-number">1</span>)<br>        pred=tf.cast(pred,dtype=y_test.dtype)<br>        <br>        correct=tf.cast(tf.equal(pred,y_test),dtype=tf.int32)<br>        correct=tf.reduce_sum(correct)<br>        total_correct +=int (correct)<br>        total_number+=x_test.shape[<span class="hljs-number">0</span>]<br>    acc=total_correct/total_number<br>    test_acc.append(acc)<br>    print(<span class="hljs-string">"Test_acc"</span>,acc)<br>    print(<span class="hljs-string">"- - - - - - - - - - - - - - - "</span>)<br>    <br>    <br>plt.title(<span class="hljs-string">'Loss Funciton Curve'</span>)<br>plt.xlabel(<span class="hljs-string">'Epoch'</span>)<br>plt.tlabel(<span class="hljs-string">'Loss'</span>)<br>plt.plot(train_loss_results, label=<span class="hljs-string">"$Loss$"</span>)<br>plt.legend()<br>plt.show()<br><br>plt,title(<span class="hljs-string">'Acc Curve'</span>)<br>plt.xlabel(<span class="hljs-string">'Epoch'</span>)<br>plt.ylabel(<span class="hljs-string">'Acc'</span>)<br>plt.plot(test_acc, label=<span class="hljs-string">"$Accuracy$"</span>)<br>plt.legend()<br>plt.show()<br></code></pre></td></tr></table></figure><p>刚接触所以写的慢了点</p><h4 id="sequential搭建神经网络（简化）"><a href="#sequential搭建神经网络（简化）" class="headerlink" title="sequential搭建神经网络（简化）"></a>sequential搭建神经网络（简化）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br><br>x_train=datasets.load_iris().data<br>y_train=datasets.load_iris().target<br><br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(x_train)<br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(y_train)<br>tf.random.set_seed(<span class="hljs-number">116</span>)<br><br>model=tf.keras.models.Sequential([<br>    tf.keras.layers.Dense(<span class="hljs-number">3</span>,activation=<span class="hljs-string">'softmax'</span>,kernel_regularizer=tf.keras.regularizers.l2())<br>])<br>model.compile(optimizer=tf.keras.optimizers.SGD(lr=<span class="hljs-number">0.1</span>),<br>              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="hljs-literal">False</span>),<br>              metrics=[<span class="hljs-string">'sparse_categorical_accuracy'</span>])<br>        <br>model.fit(x_train,y_train,batch_size=<span class="hljs-number">32</span>,epochs=<span class="hljs-number">500</span>,validation_split=<span class="hljs-number">0.2</span>,validation_freq=<span class="hljs-number">20</span>)<br>model.summary()<br></code></pre></td></tr></table></figure><h4 id="搭建网络八股class"><a href="#搭建网络八股class" class="headerlink" title="搭建网络八股class"></a>搭建网络八股class</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br><span class="hljs-keyword">from</span> tensorflow.keras.layers <span class="hljs-keyword">import</span> Dense<br><span class="hljs-keyword">from</span> tensorflow.keras <span class="hljs-keyword">import</span> Model<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>x_train = datasets.load_iris().data<br>y_train = datasets.load_iris().target<br><br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(x_train)<br>np.random.seed(<span class="hljs-number">116</span>)<br>np.random.shuffle(y_train)<br>tf.random.set_seed(<span class="hljs-number">116</span>)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IrisModel</span><span class="hljs-params">(Model)</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self)</span>:</span><br>        super(IrisModel, self).__init__()<br>        self.d1 = Dense(<span class="hljs-number">3</span>, activation=<span class="hljs-string">'softmax'</span>, kernel_regularizer=tf.keras.regularizers.l2())<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">call</span><span class="hljs-params">(self, x)</span>:</span><br>        y = self.d1(x)<br>        <span class="hljs-keyword">return</span> y<br><br>model = IrisModel()<br><br>model.compile(optimizer=tf.keras.optimizers.SGD(lr=<span class="hljs-number">0.1</span>),<br>              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="hljs-literal">False</span>),<br>              metrics=[<span class="hljs-string">'sparse_categorical_accuracy'</span>])<br><br>model.fit(x_train, y_train, batch_size=<span class="hljs-number">32</span>, epochs=<span class="hljs-number">500</span>, validation_split=<span class="hljs-number">0.2</span>, validation_freq=<span class="hljs-number">20</span>)<br>model.summary()<br></code></pre></td></tr></table></figure><p>先到这吧</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ssm整合代码（忘记）</title>
    <link href="/2020/12/19/ssm%E6%95%B4%E5%90%88%E4%BB%A3%E7%A0%81%EF%BC%88%E5%BF%98%E8%AE%B0%EF%BC%89/"/>
    <url>/2020/12/19/ssm%E6%95%B4%E5%90%88%E4%BB%A3%E7%A0%81%EF%BC%88%E5%BF%98%E8%AE%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="ssm整合代码（忘记）"><a href="#ssm整合代码（忘记）" class="headerlink" title="ssm整合代码（忘记）"></a>ssm整合代码（忘记）</h1><h2 id="maven资源过滤设置"><a href="#maven资源过滤设置" class="headerlink" title="maven资源过滤设置"></a>maven资源过滤设置</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;build&gt;<br>   &lt;resources&gt;<br>       &lt;resource&gt;<br>           &lt;directory&gt;src/main/java&lt;/directory&gt;<br>           &lt;includes&gt;<br>               &lt;include&gt;**<span class="hljs-comment">/*.properties&lt;/include&gt;</span><br>               &lt;include&gt;**/*.xml&lt;/include&gt;<br>           &lt;/includes&gt;<br>           &lt;filtering&gt;false&lt;/filtering&gt;<br>       &lt;/resource&gt;<br>       &lt;resource&gt;<br>           &lt;directory&gt;src/main/resources&lt;/directory&gt;<br>           &lt;includes&gt;<br>               &lt;include&gt;**<span class="hljs-comment">/*.properties&lt;/include&gt;</span><br>               &lt;include&gt;**/*.xml&lt;/include&gt;<br>           &lt;/includes&gt;<br>           &lt;filtering&gt;false&lt;/filtering&gt;<br>       &lt;/resource&gt;<br>   &lt;/resources&gt;<br>&lt;/build&gt;<br></code></pre></td></tr></table></figure><h2 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"UTF-8"</span> ?&gt;<br>&lt;!DOCTYPE configuration<br>       PUBLIC <span class="hljs-string">"-//mybatis.org//DTD Config 3.0//EN"</span><br>       <span class="hljs-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;<br>&lt;configuration&gt;<br><br>&lt;/configuration&gt;<br></code></pre></td></tr></table></figure><h3 id="applicationContext-xml"><a href="#applicationContext-xml" class="headerlink" title="applicationContext.xml"></a>applicationContext.xml</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"UTF-8"</span>?&gt;<br>&lt;beans xmlns=<span class="hljs-string">"http://www.springframework.org/schema/beans"</span><br>      xmlns:xsi=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span><br>      xsi:schemaLocation=<span class="hljs-string">"http://www.springframework.org/schema/beans</span><br><span class="hljs-string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;<br><br>&lt;/beans&gt;<br></code></pre></td></tr></table></figure><h3 id="数据库连接池-c3po-（当时因为版本的原因搞了好久）"><a href="#数据库连接池-c3po-（当时因为版本的原因搞了好久）" class="headerlink" title="数据库连接池 c3po （当时因为版本的原因搞了好久）"></a>数据库连接池 c3po （当时因为版本的原因搞了好久）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">jdbc.url=jdbc:mysql:<span class="hljs-comment">//localhost:3306/ssmbuild?useUnicode=true&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC</span><br></code></pre></td></tr></table></figure><p>暂时就这些..</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客，没什么要写的，应该无可厚非吧！</title>
    <link href="/2020/12/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%B2%A1%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E7%9A%84%EF%BC%8C%E5%BA%94%E8%AF%A5%E6%97%A0%E5%8F%AF%E5%8E%9A%E9%9D%9E%E5%90%A7%EF%BC%81/"/>
    <url>/2020/12/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%B2%A1%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E7%9A%84%EF%BC%8C%E5%BA%94%E8%AF%A5%E6%97%A0%E5%8F%AF%E5%8E%9A%E9%9D%9E%E5%90%A7%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="第一篇博客，没什么要写的，应该无可厚非吧！"><a href="#第一篇博客，没什么要写的，应该无可厚非吧！" class="headerlink" title="第一篇博客，没什么要写的，应该无可厚非吧！"></a>第一篇博客，没什么要写的，应该无可厚非吧！</h1><p> 从现在开始，这个博客就用来记录接下去生活咯，希望未来的我能来回忆下这第一篇博客。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/07/19/hello-world/"/>
    <url>/2020/07/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy杀撒三撒<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=28475345&auto=1&height=66"></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
